<?php
/**
 * desc 简单读取csv,xls为数组
 * Created by PhpStorm.
 * User: zhangshuai
 * Date: 18-4-14
 * Time: 下午1:59
 */

namespace app\models;


use PhpOffice\PhpSpreadsheet\IOFactory;
use PhpOffice\PhpSpreadsheet\Reader\BaseReader;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\BaseWriter;

class ExcelData extends IOFactory
{
    /**
     * 支持的文件类型
     * @var array
     */
    private static $file_type = [
        'Xls',
        'Xml',
        'Ods',
        'Slk',
        'Csv',
        'Html',
        'Xlsx',
        'Gnumeric',
    ];

    public static $filter;

    public function __construct($star = null, $end = null)
    {
        if ($star && $end) {
            self::$filter = new ExcelFilter($star, $end);

        }
    }

    /**
     * @param $file_name
     * @param string $reade_from
     * @return array
     * @throws \ErrorException
     * @throws \PhpOffice\PhpSpreadsheet\Exception
     * @throws \PhpOffice\PhpSpreadsheet\Reader\Exception
     */
    public function ToArray($file_name, $reade_from = 'all')
    {
        if (!file_exists($file_name)) {
            throw new \ErrorException('文件不存在!');
        }
        //获取文件类型
        $file_type = ucfirst(pathinfo($file_name, PATHINFO_EXTENSION));

        if (!in_array($file_type, self::$file_type, true)) {
            throw new \ErrorException('不支持的文件类型!');
        }
        $reader = self::createReader($file_type);
        if ($reade_from === 'all') {
            return $reader->load($file_name)->getSheet(0)->toArray(null, true, true, true);
        }
        $reader = $reader->setReadFilter(self::$filter)->load($file_name)->getSheet(0);
        $pRange = 'A' . self::$filter->startRow . ':' . $reader->getHighestColumn() . self::$filter->endRow;
        return $reader->rangeToArray($pRange, true, true, true);


    }


    /**
     * @param string $readerType
     * @return \PhpOffice\PhpSpreadsheet\Reader\IReader | BaseReader;
     * @throws \PhpOffice\PhpSpreadsheet\Reader\Exception
     */
    public static function createReader($readerType)
    {
        return parent::createReader($readerType); // TODO: Change the autogenerated stub
    }

    /**
     * @param Spreadsheet $spreadsheet
     * @param string $writerType
     * @return \PhpOffice\PhpSpreadsheet\Writer\IWriter |BaseWriter;
     * @throws \PhpOffice\PhpSpreadsheet\Writer\Exception
     */
    public static function createWriter(Spreadsheet $spreadsheet, $writerType)
    {
        return parent::createWriter($spreadsheet, $writerType); // TODO: Change the autogenerated stub
    }


}